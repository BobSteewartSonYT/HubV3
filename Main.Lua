--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then local v77=0;while true do if (v77==0) then v19=v0(v3(v30,1,1));return "";end end else local v78=0;local v79;while true do if (v78==0) then v79=v2(v0(v30,16));if v19 then local v105=v5(v79,v19);v19=nil;return v105;else return v79;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v80=1976 -(781 + 1195) ;local v81;while true do if (v80==(0 + 0)) then v81=(v31/(2^(v32-(2 -1))))%((1748 -(1037 + 709))^(((v33-(1143 -((1704 -(376 + 489)) + 62 + 241))) -(v32-(1 + 0 + 0))) + (1200 -(120 + 1079)))) ;return v81-(v81%(1514 -(1208 + 305))) ;end end else local v82=0 -0 ;local v83;while true do if (v82==((638 -(590 + 48)) -0)) then v83=(1 + 1)^(v32-1) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (0 + (0 -0)) ;end end end end local function v21()local v34=0;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + 1 + 0 ;v34=1 + 0 ;end if ((1587 -(875 + (1571 -860)))==v34) then return v35;end end end local function v22()local v36=1514 -(188 + 1326) ;local v37;local v38;while true do if (0==v36) then v37,v38=v1(v16,v18,v18 + 2 );v18=v18 + (1016 -(438 + (1600 -(172 + 852)))) ;v36=1 -0 ;end if (v36==(1 + 0)) then return (v38 * 256) + v37 ;end end end local function v23()local v39=0 + 0 ;local v40;local v41;local v42;local v43;while true do if (v39==(1 + 0)) then return (v43 * 16777216) + (v42 * 65536) + (v41 * (1960 -(938 + 766))) + v40 ;end if ((0 -0)==v39) then v40,v41,v42,v43=v1(v16,v18,v18 + (10 -7) );v18=v18 + (190 -(129 + 57)) ;v39=1 + 0 ;end end end local function v24()local v44=0 -0 ;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v44==(485 -(231 + 253))) then v47=1 + 0 ;v48=(v20(v46,1 + 0 ,27 -7 ) * ((2 + 0)^(115 -83))) + v45 ;v44=2;end if (v44==(5 -3)) then v49=v20(v46,9 + 12 ,(767 -(638 + 59)) -39 );v50=((v20(v46,(309 -223) -54 )==1) and  -(2 -1)) or 1 ;v44=1510 -(1420 + 87) ;end if (v44==(237 -(33 + 204))) then v45=v23();v46=v23();v44=1 + 0 ;end if ((11 -8)==v44) then if (v49==(0 -0)) then if (v48==0) then return v50 * (1836 -(435 + 1401)) ;else v49=(4 -3) + 0 ;v47=0;end elseif (v49==2047) then return ((v48==((522 -(394 + 128)) + (1687 -(160 + 1527)))) and (v50 * ((715 -(87 + 122 + 505))/(0 -0)))) or (v50 * NaN) ;end return v8(v50,v49-1023 ) * (v47 + (v48/(((150 -(83 + 65)) + 0)^(9 + (1980 -(178 + 1759)))))) ;end end end local function v25(v51)local v52;if  not v51 then local v84=(0 -0) + 0 ;while true do if (v84==(661 -(114 + 547))) then v51=v23();if (v51==0) then return "";end break;end end end v52=v3(v16,v18,(v18 + v51) -((251 -(86 + 163)) -1) );v18=v18 + v51 ;local v53={};for v70=2 -1 , #v52 do v53[v70]=v2(v1(v3(v52,v70,v70)));end return v6(v53);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0 + 0 ;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v54==(1567 -(1264 + 301))) then v59=nil;v60=nil;v54=3 + 0 ;end if (v54==(6 -3)) then v61=nil;v62=nil;v54=10 -6 ;end if (v54==(931 -(892 + 38))) then v57=nil;v58=nil;v54=1 + 1 ;end if (v54==(75 -(68 + 7))) then v55=0 + 0 ;v56=nil;v54=1;end if (v54~=(1 + 3)) then else v63=nil;while true do if (v55~=(0 -0)) then else local v104=0 -0 ;while true do if (v104==(0 -0)) then v56=0 -0 ;v57=nil;v104=2 -1 ;end if (v104~=(1 -0)) then else v55=1644 -(1543 + 100) ;break;end end end if (v55~=1) then else v58=nil;v59=nil;v55=1 + 1 ;end if (v55==(10 -7)) then v62=nil;v63=nil;v55=8 -4 ;end if (4~=v55) then else while true do if (v56~=(0 + 0)) then else v57=0 -0 ;v58=nil;v56=1 + 0 ;end if (v56==(1728 -(177 + 1549))) then local v106=0;while true do if (v106==(1 + 0)) then v56=3 + 0 ;break;end if (v106==0) then v61=nil;v62=nil;v106=1 + 0 ;end end end if (3==v56) then v63=nil;while true do local v110=0 + 0 ;local v111;while true do if ((0 + 0)==v110) then v111=0 + 0 ;while true do if (v111~=(3 -2)) then else if (v57==(360 -(140 + 219))) then local v136=0 + 0 ;local v137;local v138;while true do if (v136==(1571 -(971 + 600))) then v137=0;v138=nil;v136=1 + 0 ;end if (v136~=(1 + 0)) then else while true do if (v137==(0 -0)) then v138=0 -0 ;while true do if (v138~=(3 -2)) then else local v211=0 -0 ;while true do if (v211~=(0 -0)) then else local v242=1598 -(1232 + 366) ;while true do if ((0 + 0)~=v242) then else for v253=1695 -(900 + 794) ,v62 do local v254=1410 -(142 + 1268) ;local v255;local v256;local v257;local v258;local v259;while true do if (v254==(2 -1)) then v257=nil;v258=nil;v254=2;end if ((0 -0)~=v254) then else v255=0 + 0 ;v256=nil;v254=1577 -(1510 + 66) ;end if (v254==(137 -(66 + 69))) then v259=nil;while true do if (v255==(1923 -(741 + 1181))) then v258=nil;v259=nil;v255=2 + 0 ;end if (2==v255) then while true do if (v256~=1) then else v259=nil;while true do if ((0 + 0)~=v257) then else local v289=0 -0 ;local v290;local v291;while true do if (v289~=(371 -(263 + 108))) then else v290=0 -0 ;v291=nil;v289=1 + 0 ;end if (1==v289) then while true do if (v290~=(0 -0)) then else v291=1051 -(232 + 819) ;while true do if (v291==(3 -2)) then v257=1 -0 ;break;end if (v291~=0) then else local v303=0;local v304;while true do if (v303==0) then v304=0;while true do if ((370 -(31 + 339))==v304) then local v306=0 + 0 ;while true do if (v306==(1526 -(1337 + 189))) then v258=v21();v259=nil;v306=1 -0 ;end if (v306==(1 + 0)) then v304=1;break;end end end if (v304~=1) then else v291=1565 -(915 + 649) ;break;end end break;end end end end break;end end break;end end end if ((1654 -(1245 + 408))~=v257) then else if (v258==1) then v259=v21()~=(0 -0) ;elseif (v258==(2 + 0)) then v259=v24();elseif (v258==(1740 -(1661 + 76))) then v259=v25();end v63[v253]=v259;break;end end break;end if (v256~=0) then else local v282=0 + 0 ;while true do if ((0 -0)==v282) then v257=0 -0 ;v258=nil;v282=1;end if ((1 -0)~=v282) then else v256=1 + 0 ;break;end end end end break;end if (v255~=(0 + 0)) then else local v275=0 + 0 ;while true do if (v275~=(1733 -(757 + 975))) then else v255=1;break;end if ((0 + 0)==v275) then v256=0;v257=nil;v275=1;end end end end break;end end end v61[795 -(519 + 273) ]=v21();v242=1 + 0 ;end if (v242~=(1 + 0)) then else v211=2 -1 ;break;end end end if (v211==(752 -(370 + 381))) then v138=2;break;end end end if (v138~=(3 -1)) then else v57=1 + 1 ;break;end if (v138~=(0 + 0)) then else local v212=0;local v213;while true do if (v212==(0 + 0)) then v213=0;while true do if (v213==(1 -0)) then v138=1282 -(359 + 922) ;break;end if (v213~=(0 -0)) then else local v252=1664 -(509 + 1155) ;while true do if (v252~=1) then else v213=1 -0 ;break;end if (v252==(141 -(75 + 66))) then v62=v23();v63={};v252=1;end end end end break;end end end end break;end end break;end end end break;end if (v111==(1769 -(1123 + 646))) then local v115=0;while true do if (v115==(2 -1)) then v111=1;break;end if (v115==0) then if (v57~=(724 -(658 + 64))) then else local v170=0;local v171;while true do if (v170~=(0 -0)) then else v171=0;while true do if (v171~=(0 + 0)) then else for v220=2 -1 ,v23() do local v221=0;local v222;local v223;local v224;while true do if (v221==1) then v224=nil;while true do if (v222~=(3 -2)) then else while true do if ((0 + 0)==v223) then v224=v21();if (v20(v224,1 -0 ,1)==0) then local v270=1833 -(1705 + 128) ;local v271;local v272;local v273;local v274;while true do if (v270==1) then local v276=1860 -(443 + 1417) ;while true do if ((0 + 0)~=v276) then else v273=nil;v274=nil;v276=1;end if (v276~=1) then else v270=2;break;end end end if (v270==(915 -(659 + 254))) then while true do if (v271~=1) then else local v283=0 -0 ;local v284;while true do if (v283==(0 + 0)) then v284=0;while true do if (v284~=1) then else v271=1427 -(1165 + 260) ;break;end if (v284~=(0 -0)) then else local v296=0 + 0 ;local v297;while true do if (v296==0) then v297=0;while true do if (v297~=(0 + 0)) then else local v305=0 -0 ;while true do if (v305~=0) then else v274={v22(),v22(),nil,nil};if (v272==(0 + 0)) then local v307=0 -0 ;local v308;local v309;while true do if (v307==(1 + 0)) then while true do if (v308~=(0 + 0)) then else v309=0 -0 ;while true do if (v309~=(525 -(487 + 38))) then else v274[1176 -(488 + 685) ]=v22();v274[1 + 3 ]=v22();break;end end break;end end break;end if (v307==(0 -0)) then v308=0 -0 ;v309=nil;v307=725 -(369 + 355) ;end end elseif (v272==1) then v274[1 + 2 ]=v23();elseif (v272==(1004 -(142 + 860))) then v274[3]=v23() -((1707 -(32 + 1673))^(1385 -(235 + 1134))) ;elseif (v272==3) then local v312=161 -(127 + 34) ;while true do if ((1294 -(234 + 1060))~=v312) then else v274[4 -1 ]=v23() -(2^(2 + 14)) ;v274[4]=v22();break;end end end v305=143 -(55 + 87) ;end if (1~=v305) then else v297=67 -(50 + 16) ;break;end end end if (v297~=(1237 -(821 + 415))) then else v284=1 + 0 ;break;end end break;end end end end break;end end end if (v271~=(12 -9)) then else if (v20(v273,3,4 -1 )==(1 + 0)) then v274[8 -4 ]=v63[v274[3 + 1 ]];end v58[v220]=v274;break;end if (v271~=2) then else local v286=1372 -(1320 + 52) ;while true do if (v286==(1 + 0)) then v271=3;break;end if (v286==(0 -0)) then local v295=0 -0 ;while true do if ((1 + 0)==v295) then v286=1 + 0 ;break;end if (v295==(842 -(89 + 753))) then if (v20(v273,1349 -(776 + 572) ,1 + 0 )~=(1236 -(618 + 617))) then else v274[5 -3 ]=v63[v274[1 + 1 ]];end if (v20(v273,2,668 -(210 + 456) )==(1 + 0)) then v274[3]=v63[v274[3 + 0 ]];end v295=410 -(218 + 191) ;end end end end end if (v271==0) then local v287=0;local v288;while true do if (v287==0) then v288=0;while true do if (v288==(0 + 0)) then local v298=549 -(213 + 336) ;while true do if ((1 -0)~=v298) then else v288=1 + 0 ;break;end if (v298~=0) then else v272=v20(v224,9 -7 ,3);v273=v20(v224,4 + 0 ,6);v298=1;end end end if (v288==(1259 -(827 + 431))) then v271=1;break;end end break;end end end end break;end if (v270~=0) then else local v277=0 + 0 ;local v278;while true do if (v277==0) then v278=0 + 0 ;while true do if (v278==(578 -(478 + 99))) then v270=1;break;end if (v278==(820 -(790 + 30))) then v271=0 -0 ;v272=nil;v278=1;end end break;end end end end end break;end end break;end if (v222~=(0 + 0)) then else local v260=0 -0 ;while true do if (v260==0) then v223=0;v224=nil;v260=1;end if (v260==1) then v222=2 -1 ;break;end end end end break;end if ((0 + 0)~=v221) then else v222=1201 -(858 + 343) ;v223=nil;v221=1 -0 ;end end end for v225=1299 -(1029 + 269) ,v23() do v59[v225-(1 + 0) ]=v28();end v171=1 + 0 ;end if ((1 + 0)==v171) then local v214=1456 -(1329 + 127) ;while true do if (v214==(0 + 0)) then for v244=1176 -(367 + 808) ,v23() do v60[v244]=v23();end return v61;end end end end break;end end end if (v57==0) then local v172=0 -0 ;local v173;while true do if (v172~=(1042 -(615 + 427))) then else v173=0;while true do if (0==v173) then local v215=0 -0 ;while true do if (v215==(1 + 0)) then v173=1;break;end if (v215==0) then local v243=0;while true do if (v243==(0 -0)) then v58={};v59={};v243=1 -0 ;end if (v243~=1) then else v215=2 -1 ;break;end end end end end if (v173==(1 + 0)) then local v216=0;while true do if (v216~=(0 + 0)) then else v60={};v61={v58,v59,nil,v60};v216=1;end if (v216~=(1 + 0)) then else v173=132 -(41 + 89) ;break;end end end if (v173==(2 -0)) then v57=1 -0 ;break;end end break;end end end v115=1;end end end end break;end end end break;end if (v56~=(2 -1)) then else local v107=0 -0 ;local v108;while true do if (v107~=(0 + 0)) then else v108=0 -0 ;while true do if (v108==0) then local v114=0;while true do if (1==v114) then v108=3 -2 ;break;end if (v114~=(0 -0)) then else v59=nil;v60=nil;v114=1 -0 ;end end end if (v108~=(1 + 0)) then else v56=2;break;end end break;end end end end break;end if (v55~=2) then else v60=nil;v61=nil;v55=7 -4 ;end end break;end end end local function v29(v64,v65,v66)local v67=v64[1];local v68=v64[2];local v69=v64[3];return function(...)local v72=1;local v73= -1;local v74={...};local v75=v12("#",...) -1 ;local function v76()local v85=v67;local v86=v68;local v87=v69;local v88=v27;local v89={};local v90={};local v91={};for v95=0 -0 ,v75 do if (((6223 -(29 + 1849))>=(2196 -(259 + 101))) and (v95>=v87)) then v89[v95-v87 ]=v74[v95 + 1 ];else v91[v95]=v74[v95 + 1 ];end end local v92=(v75-v87) + 1 ;local v93;local v94;while true do local v96=1019 -(760 + 259) ;local v97;while true do if ((4373<=4400) and (v96==(0 -0))) then v97=0 -0 ;while true do if ((v97==1) or ((7674 -2952)<(7143 -2927))) then if ((v94<=(35 -25)) or ((5341 -(500 + 1371))<=(1067 + 1141))) then if ((v94<=4) or ((2733 + 590)==(4657 -(51 + 74)))) then if ((v94<=(2 -1)) or ((2952 -(443 + 38 + 185))==((1266 -997) + 2862))) then if (((4521 -(225 + 245))<=(7355 -3245)) and (v94>(0 -0))) then v91[v93[2 -0 ]]=v91[v93[2 + (770 -(730 + 39)) ]][v93[863 -(749 + 110) ]];else local v118=0 + 0 ;local v119;local v120;local v121;local v122;local v123;while true do if ((v118==(0 + 0)) or ((2496 + 1869 + 122)>=(326 + 4333))) then v119=790 -(378 + 412) ;v120=nil;v118=1;end if (((642 + 1889)>=1812) and ((936 -((1226 -(8 + 286)) + (3 -1)))==v118)) then v123=nil;while true do if (((423 -(48 + 260))==(249 -((537 -(388 + 20)) + 5))) and (v119==(0 + 0))) then local v181=1047 -(1001 + 46) ;while true do if (((1 + 9)==(33 -23)) and (v181==(0 -0))) then v120=v93[2];v121,v122=v88(v91[v120](v13(v91,v120 + (2 -1) ,v93[3])));v181=1 + 0 ;end if ((v181==(1182 -(1120 + 61))) or ((2414 -(1018 + (1028 -(99 + 878))))>3149)) then v119=1;break;end end end if ((v119==(2 + 0)) or (4419<(588 + 151))) then for v203=v120,v73 do local v204=680 -(587 + 93) ;while true do if ((2311<=4009) and (v204==(0 + 0))) then v123=v123 + 1 + 0 ;v91[v203]=v121[v123];break;end end end break;end if ((3279>(1307 + 1206)) and ((1751 -(1005 + 745))==v119)) then v73=(v122 + v120) -((253 + 1040) -(1228 + 64)) ;v123=0 -0 ;v119=808 -((512 -(270 + 85)) + 649) ;end end break;end if ((v118==(1 + 0)) or (4251==(431 -199))) then v121=nil;v122=nil;v118=3 -1 ;end end end elseif ((1276==(939 + (2241 -(20 + 1884)))) and (v94<=(247 -(214 + 31)))) then local v124=0 + 0 ;local v125;local v126;while true do if ((v124==(0 -0)) or ((2686 -(1481 + 240 + 10))>=(2243 -785))) then local v168=562 -(317 + 245) ;while true do if (((1205 + 959)<(14132 -9244)) and (v168==0)) then v125=489 -(103 + 386) ;v126=nil;v168=1 + 0 ;end if (((1 + 0)==v168) or (((7073 -4634) + 455)>4402)) then v124=1 + 0 ;break;end end end if ((v124==1) or (453>=((2494 + 1303) -2116))) then while true do if (((1436 -(651 + 518))<(2790 -2100)) and (0==v125)) then v126=v93[1415 -(934 + (835 -356)) ];v91[v126]=v91[v126](v13(v91,v126 + 1 + 0 ,v93[1503 -(1294 + 206) ]));break;end end break;end end elseif (((786 + 380)<1575) and (v94>3)) then v91[v93[7 -(10 -5) ]]=v65[v93[1133 -(793 + 337) ]];else local v143=0;local v144;local v145;while true do if ((v143==1) or (3649<=((2168 -1089) + (3195 -1767)))) then while true do if (((535 + 1255)<=(1147 + 1158)) and (v144==0)) then v145=v93[(1073 -(175 + 897)) + 1 ];v91[v145]=v91[v145](v13(v91,v145 + 1 ,v73));break;end end break;end if (((2887 + 1568)==(10278 -5823)) and (v143==(0 + 0))) then v144=0 + 0 ;v145=nil;v143=1;end end end elseif ((v94<=(1021 -(558 + 456))) or ((692 + 3163)<=(473 + 711))) then if ((v94<=(996 -(199 + 513 + 279))) or (((3223 + 5087) -4160)<957)) then local v127=(0 + 0) -0 ;local v128;local v129;while true do if ((v127==(0 + (0 -0))) or ((5275 -(994 + 20))<=((1081 + 5703) -4051))) then v128=0 -0 ;v129=nil;v127=1 + (1882 -(226 + 1656)) ;end if (((233 + 868)<(5631 -(978 + 257))) and (v127==(1514 -(579 + 934)))) then while true do if (((5766 -(690 + 93))>(1076 + 2374)) and (v128==(867 -(502 + 365)))) then v129=v93[6 -4 ];v91[v129]=v91[v129](v91[v129 + (769 -((1020 -569) + 317)) ]);break;end end break;end end elseif (((3449 -(659 + 1213))<=(13718 -9974)) and (v94==(1132 -(53 + 1073)))) then do return;end else local v146=0;local v147;local v148;local v149;while true do if ((1517<(4063 -(517 + 212))) and (v146==(1392 -(817 + 574)))) then v149={};v148=v10({},{__index=function(v186,v187)local v188=304 -(56 + 211 + 37) ;local v189;local v190;local v191;while true do if ((v188==(1791 -(389 + 1402))) or (((13438 -6089) -2943)>(6019 -(595 + 465)))) then v189=0;v190=nil;v188=1;end if ((v188==(261 -(147 + 113))) or ((2822 + 208)>=(6436 -2468))) then v191=nil;while true do if (((7091 -5556)==(3478 -(423 + 1520))) and (v189==0)) then v190=1155 -(911 + 244) ;v191=nil;v189=(1968 -(1778 + 189)) -0 ;end if ((2175<(4417 -(465 + 1051))) and ((1 -0)==v189)) then while true do if (((3012 -(55 + 114))>=(2120 -(260 + 567))) and (v190==(1554 -(124 + 1430)))) then local v248=1858 -(160 + 1698) ;local v249;while true do if ((v248==(0 + (0 -0))) or ((730 + 1899)==(4851 -(307 + 13)))) then v249=0;while true do if (((0 -0)==v249) or ((1709 + 321)<1271)) then v191=v149[v187];return v191[1 -0 ][v191[(1120 -(1077 + 41)) -0 ]];end end break;end end end end break;end end break;end end end,__newindex=function(v192,v193,v194)local v195=0 -0 ;local v196;local v197;while true do if ((303<(466 + 3081)) and ((0 -0)==v195)) then v196=1209 -(781 + 428) ;v197=nil;v195=1;end if ((v195==(1 + 0)) or (((2865 -(1412 + 159)) + 318)>(5080 -(499 + 32)))) then while true do if (((951 + 3162)==(12467 -(8243 + 111))) and (v196==(0 + 0))) then v197=v149[v193];v197[1 + 0 ][v197[4 -2 ]]=v194;break;end end break;end end end});v146=2;end if ((v146==(0 + 0 + 0)) or ((3590 + 524)<=(1083 -525))) then v147=v86[v93[3 -0 ]];v148=nil;v146=1445 -(1331 + (225 -112)) ;end if ((2==v146) or (449>=((5505 -(228 + 463)) -1917))) then for v198=1,v93[12 -8 ] do local v199=0 + 0 ;local v200;local v201;while true do if ((3391>=((4915 -2498) -(129 + 15))) and (v199==(390 -(235 + 155)))) then v200=0 + 0 ;v201=nil;v199=614 -(7 + 606) ;end if ((v199==(1612 -(831 + (2051 -(888 + 383))))) or ((606 + 3747)==((3825 -(148 + 1283)) + 126))) then while true do if (((5302 -(171 + 1053))>(9312 -6068)) and (v200==0)) then local v240=0 + 0 ;while true do if (((2485 -(23 + 157))>(2274 -1413)) and (v240==(470 -((148 -97) + 419)))) then v72=v72 + (2 -1) ;v201=v85[v72];v240=1 -0 ;end if ((v240==(1 + 0)) or ((2602 + 1669)==(6057 -(366 + 845)))) then v200=1 + 0 ;break;end end end if ((v200==1) or ((8267 -5305)<=(1678 + 420))) then if (((554 + 1320)<2554) and (v201[1845 -(1798 + 46) ]==18)) then v149[v198-(1 + 0) ]={v91,v201[1316 -(416 + (2452 -(276 + 1279))) ]};else v149[v198-(4 -3) ]={v65,v201[1 + 1 + 1 ]};end v90[ #v90 + 1 + 0 ]=v149;break;end end break;end end end v91[v93[2 + 0 ]]=v29(v147,v148,v66);break;end end end elseif (((1675 + 20 + 2)<=((3945 -(1668 + 159)) + 2427)) and (v94<=(8 + 0))) then v91[v93[2 + 0 ]]=v66[v93[1 + 2 ]];elseif ((v94==(2 + 7)) or (2659>(11495 -8095))) then local v150=0;local v151;local v152;local v153;local v154;while true do if (((2 -1)==v150) or ((58 + 359)<(1898 -(858 + 819)))) then v153=nil;v154=nil;v150=1 + 1 ;end if (((1788 + 738)==((2911 -(1447 + 22)) + 1084)) and (v150==(0 -0))) then v151=0;v152=nil;v150=2 -1 ;end if ((31==(66 -35)) and (v150==(5 -3))) then while true do if ((v151==(0 -0)) or (183>=3449)) then local v208=0 + 0 ;while true do if ((v208==(1 + 0)) or ((373 + 215)<(1008 -433))) then v151=1 + 0 + 0 + 0 ;break;end if ((v208==0) or ((10546 -(8540 -(543 + 146)))>(9189 -5614))) then v152=(662 -(145 + 517)) + 0 ;v153=nil;v208=1358 -(337 + 1020) ;end end end if ((1553<=(4605 -(2402 -(813 + 514)))) and (v151==1)) then v154=nil;while true do if ((v152==(1792 -(667 + 1124))) or (4170>4207)) then v91[v153 + (1 -0) ]=v154;v91[v153]=v154[v93[(962 -(91 + 858)) -9 ]];break;end if ((v152==(0 -0)) or ((854 + 1451)==4795)) then local v230=0 + 0 ;local v231;while true do if (((2895 + 392 + 867)==4154) and (v230==0)) then v231=0;while true do if ((v231==(251 -(157 + 93))) or ((3937 + (1411 -543))<(2789 + 1563))) then v152=2 -1 ;break;end if ((v231==(0 -0)) or ((1550 + 272)>=((6347 -3290) + (615 -(21 + 469))))) then v153=v93[2 -(0 -0) ];v154=v91[v93[351 -(31 + 317) ]];v231=1 -(0 -0) ;end end break;end end end end break;end end break;end end else v72=v93[1 + 0 + 2 ];end elseif (((225 + 2884)>=580) and (v94<=15)) then if ((v94<=(11 + 1)) or (1723==(5463 -2123))) then if (((3879 -(1201 + 434))<=2356) and (v94>(31 -20))) then v91[v93[5 -3 ]]();else v91[v93[4 -2 ]]=v29(v86[v93[4 -1 ]],nil,v66);end elseif (((9743 -6176)<(7743 -(1666 + 2473))) and (v94<=(3 + 10))) then local v133=0 + 0 ;local v134;local v135;while true do if ((((5247 -(376 + 310)) -(1010 + 573))>(1352 -(210 + 677))) and (v133==0)) then local v169=423 -(329 + 94) ;while true do if ((v169==1) or ((8797 -6348)>(193 + 4094))) then v133=2 -1 ;break;end if (((0 -0)==v169) or (66==2210)) then v134=v93[2];v135={};v169=1 + (1823 -(1637 + 186)) ;end end end if ((v133==(1051 -(21 + 1029))) or ((1854 -797)<=((7595 -5624) -((2340 -1124) + 321)))) then for v174=1 + 0 , #v90 do local v175=0 -0 ;local v176;local v177;while true do if (((348 + 1566)>=229) and ((0 + 0)==v175)) then local v205=0 -0 ;while true do if ((v205==(917 -(6 + 307 + 603))) or ((1894 -(1315 + (621 -448)))==(6525 -(1712 + 236)))) then v175=1 + 0 ;break;end if ((v205==(0 -0)) or ((5557 -(360 + 747))<(4125 -(114 + 732)))) then v176=0;v177=nil;v205=167 -(137 + 29) ;end end end if ((v175==(1683 -(614 + 1068))) or ((6677 -3614)<(809 + 1389))) then while true do if (((816 + 3812)>=(1582 -((1199 -(218 + 832)) + 1053))) and (v176==(1722 -(700 + 1022)))) then v177=v90[v174];for v232=0, #v177 do local v233=0 -(0 -0) ;local v234;local v235;local v236;local v237;while true do if (((4029 -(568 + 395))>=251) and (v233==(1040 -(216 + (2065 -(1113 + 128)))))) then v234=0;v235=nil;v233=(1965 -(1767 + 197)) + 0 ;end if ((3101<=3743) and (v233==(2 + 0))) then while true do if ((180<=(5621 -(167 + 596))) and (v234==(3 -2))) then v237=v235[(324 + 561) -(776 + (1922 -(143 + 1672))) ];if (((v236==v91) and (v237>=v134)) or (((2548 -(376 + 65)) -666)<(155 + 1227))) then local v265=0 + (0 -0) ;local v266;while true do if ((v265==(594 -(567 + 27))) or (4026<((1674 + 393) -(1136 + 46)))) then v266=0;while true do if ((v266==0) or (1647<=(2346 -1376))) then v135[v237]=v236[v237];v235[1833 -(1637 + 195) ]=v135;break;end end break;end end end break;end if (((13724 -10699)==(4641 -(586 + 1030))) and (v234==(0 -0))) then local v264=1850 -(175 + 638 + 1037) ;while true do if ((2769==(2158 + 611)) and (v264==1)) then v234=1 + 0 ;break;end if (((2066 -(383 + 618))<=(5325 -(1412 + 81))) and (v264==(0 + 0))) then v235=v177[v232];v236=v235[1 + 0 ];v264=3 -2 ;end end end end break;end if ((3862>=(2716 -1640)) and (v233==(1 -0))) then v236=nil;v237=nil;v233=1807 -(1090 + 715) ;end end end break;end end break;end end end break;end end elseif (((1947 + 962 + 1535)>=(579 + 3230)) and (v94>(36 -22))) then if ((3972>=(5427 -3525)) and (v93[5 -3 ]==v91[v93[(322 + 826) -(603 + 541) ]])) then v72=v72 + 1 + 0 ;else v72=v93[8 -5 ];end else v91[v93[1735 -(145 + 1588) ]][v93[2 + 1 ]]=v93[4 + 0 ];end elseif ((v94<=(9 + 4 + 5)) or ((9388 -5283)==(3045 + 853))) then if ((v94<=(4 + 12)) or ((178 + 324 + 587)==(4964 -(239 + 1698)))) then if ((v91[v93[2]]==v93[2002 -(376 + (2515 -893)) ]) or (998>=(5090 -(3217 -(402 + 129))))) then v72=v72 + 1 + 0 ;else v72=v93[1560 -(1374 + 183) ];end elseif ((v94==(35 -(13 + 5))) or (4570<(852 + (2824 -(229 + 686))))) then local v159=0;local v160;local v161;while true do if ((3094<=(2497 + 1080)) and (v159==1)) then while true do if ((v160==(1714 -(299 + 1415))) or ((1654 + 1057)==(3541 -(414 + 761)))) then v161=v93[404 -(172 + 230) ];v91[v161](v13(v91,v161 + (271 -(144 + 126)) + 0 ,v93[(999 + 443) -(459 + 980) ]));break;end end break;end if ((0==v159) or ((3124 -(162 + 363))<(2853 -1231))) then v160=(0 -0) -0 ;v161=nil;v159=1 + 0 ;end end else v91[v93[2]]=v91[v93[3]];end elseif ((v94<=(40 -21)) or ((152 + (47 -31))>402)) then for v139=v93[5 -3 ],v93[1777 -(1408 + 366) ] do v91[v139]=nil;end elseif ((v94>20) or ((47 + 157)>3430)) then v91[v93[423 -(382 + 39) ]][v93[(3093 -(786 + 383)) -(1009 + 912) ]]=v91[v93[4]];else v91[v93[2]]=v93[3 + 0 ];end v72=v72 + ((906 + 541) -(1372 + (190 -116))) ;break;end if ((((13668 -8076) -2436)==(2498 + 658)) and ((1860 -(1585 + 275))==v97)) then local v109=531 -(235 + 296) ;while true do if (((5876 -(1922 + 32))<(4484 + 201)) and (v109==1)) then v97=1;break;end if ((v109==(0 -0)) or ((16595 -11701)<=(7378 -4035))) then v93=v85[v72];v94=v93[1 + (0 -0) ];v109=1 + 0 ;end end end end break;end end end end A,B=v27(v11(v76));if  not A[1] then local v98=0;local v99;while true do if (0==v98) then v99=v64[4][v72] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end vv9(),...);end
